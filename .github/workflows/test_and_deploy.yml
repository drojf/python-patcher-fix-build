# Useful Links
# Python with Github Actions: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test and Deploy

# Run this workflow on every push or pull request
on:
  push:
  pull_request:
  # workflow_dispatch:
  #   inputs:
  #     tag_name:
  #       description: 'Tag name for release'
  #       required: true

# Uncomment to run this workflow only when a tag is pushed
# Can set custom wildcards instead of '*', like 'v*' for tags starting with v
# NOTE: Releases are only published on tags, see "Release" step below
#on:
#  push:
#    tags:
#      - '*'

# Docs on sharing data between jobs (between VMs): https://help.github.com/en/actions/configuring-and-managing-workflows/persisting-workflow-data-using-artifacts#passing-data-between-jobs-in-a-workflow
jobs:
  # Windows Build
  windows_build:
    name: Windows Build
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      # Download the repository
      - uses: actions/checkout@v2

      # Setup python (Windows VM is Python 3.7 by default, we need at least Python 3.8)
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Restore cached cargo files to speed up future Rust builds
      # This follows the example at https://github.com/actions/cache
      # The cache will be saved automatically before the workflow ends
      # NOTE: Caches are cleared if not used for 7 days
      # NOTE: "Cache cargo registry" gives a "Can't unlink already-existing object" error. It should be fine anyway.
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: install_loader/target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      # Configure Rust for 32-bit builds
      # Please use fixed versions of rust so that installs build consistently
      # (So they don't randomly trigger Windows Defender)
      - name: Configure Rust for 32-bit
        run: |
          rustup toolchain install 1.52.1-i686-pc-windows-msvc
          rustup default 1.52.1-i686-pc-windows-msvc
